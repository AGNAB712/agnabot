interface JavaStatusOptions {
    query: boolean;
}
interface StatusResponse {
    online: boolean;
    host: string;
    port: number;
    eula_blocked: boolean;
    retrieved_at: number;
    expires_at: number;
}
interface JavaStatusResponse extends StatusResponse {
    version?: {
        name_raw: string;
        name_clean: string;
        name_html: string;
        protocol: number;
    } | null;
    players?: {
        online: number;
        max: number;
        list: {
            uuid: string;
            name_raw: string;
            name_clean: string;
            name_html: string;
        }[];
    };
    motd?: {
        raw: string;
        clean: string;
        html: string;
    };
    icon?: string | null;
    mods?: {
        name: string;
        version: string;
    }[];
    plugins?: {
        name: string;
        version: string;
    }[];
    software?: string;
}
interface BedrockStatusResponse extends StatusResponse {
    version?: {
        name: string;
        protocol: number;
    };
    players?: {
        online: number;
        max: number;
    };
    motd?: {
        raw: string;
        clean: string;
        html: string;
    };
    gamemode?: string;
    server_id?: string;
    edition?: 'MCPE' | 'MCEE';
}
declare const statusJava: (host: string, port?: number, options?: JavaStatusOptions) => Promise<JavaStatusResponse>;
declare const statusBedrock: (host: string, port?: number) => Promise<BedrockStatusResponse>;
export { statusJava, statusBedrock, StatusResponse, JavaStatusResponse, BedrockStatusResponse };
//# sourceMappingURL=status.d.ts.map