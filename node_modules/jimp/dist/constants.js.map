{"version":3,"sources":["../src/constants.js"],"names":["AUTO","MIME_PNG","MIME_TIFF","MIME_JPEG","MIME_JGD","MIME_BMP","MIME_X_MS_BMP","MIME_GIF","PNG_FILTER_AUTO","PNG_FILTER_NONE","PNG_FILTER_SUB","PNG_FILTER_UP","PNG_FILTER_AVERAGE","PNG_FILTER_PATH","RESIZE_NEAREST_NEIGHBOR","RESIZE_BILINEAR","RESIZE_BICUBIC","RESIZE_HERMITE","RESIZE_BEZIER","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","VERTICAL_ALIGN_BOTTOM","BLEND_SOURCE_OVER","BLEND_DESTINATION_OVER","BLEND_MULTIPLY","BLEND_SCREEN","BLEND_OVERLAY","BLEND_DARKEN","BLEND_LIGHTEN","BLEND_HARDLIGHT","BLEND_DIFFERENCE","BLEND_EXCLUSION","getJimpDir","__dirname","dirName","FONT_SANS_8_BLACK","FONT_SANS_10_BLACK","FONT_SANS_12_BLACK","FONT_SANS_14_BLACK","FONT_SANS_16_BLACK","FONT_SANS_32_BLACK","FONT_SANS_64_BLACK","FONT_SANS_128_BLACK","FONT_SANS_8_WHITE","FONT_SANS_16_WHITE","FONT_SANS_32_WHITE","FONT_SANS_64_WHITE","FONT_SANS_128_WHITE","EDGE_EXTEND","EDGE_WRAP","EDGE_CROP"],"mappings":";;;;;;;;AAAA;AACO,IAAMA,IAAI,GAAG,CAAC,CAAd,C,CAEP;;;AACO,IAAMC,QAAQ,GAAG,WAAjB;;AACA,IAAMC,SAAS,GAAG,YAAlB;;AACA,IAAMC,SAAS,GAAG,YAAlB;;AACA,IAAMC,QAAQ,GAAG,WAAjB;;AACA,IAAMC,QAAQ,GAAG,WAAjB;;AACA,IAAMC,aAAa,GAAG,gBAAtB;;AACA,IAAMC,QAAQ,GAAG,WAAjB,C,CAEP;;;AACO,IAAMC,eAAe,GAAG,CAAC,CAAzB;;AACA,IAAMC,eAAe,GAAG,CAAxB;;AACA,IAAMC,cAAc,GAAG,CAAvB;;AACA,IAAMC,aAAa,GAAG,CAAtB;;AACA,IAAMC,kBAAkB,GAAG,CAA3B;;AACA,IAAMC,eAAe,GAAG,CAAxB;;AAEA,IAAMC,uBAAuB,GAAG,iBAAhC;;AACA,IAAMC,eAAe,GAAG,uBAAxB;;AACA,IAAMC,cAAc,GAAG,sBAAvB;;AACA,IAAMC,cAAc,GAAG,sBAAvB;;AACA,IAAMC,aAAa,GAAG,qBAAtB,C,CAEP;;;AACO,IAAMC,qBAAqB,GAAG,CAA9B;;AACA,IAAMC,uBAAuB,GAAG,CAAhC;;AACA,IAAMC,sBAAsB,GAAG,CAA/B;;AAEA,IAAMC,kBAAkB,GAAG,CAA3B;;AACA,IAAMC,qBAAqB,GAAG,EAA9B;;AACA,IAAMC,qBAAqB,GAAG,EAA9B,C,CAEP;;;AACO,IAAMC,iBAAiB,GAAG,SAA1B;;AACA,IAAMC,sBAAsB,GAAG,SAA/B;;AACA,IAAMC,cAAc,GAAG,UAAvB;;AACA,IAAMC,YAAY,GAAG,QAArB;;AACA,IAAMC,aAAa,GAAG,SAAtB;;AACA,IAAMC,YAAY,GAAG,QAArB;;AACA,IAAMC,aAAa,GAAG,SAAtB;;AACA,IAAMC,eAAe,GAAG,WAAxB;;AACA,IAAMC,gBAAgB,GAAG,YAAzB;;AACA,IAAMC,eAAe,GAAG,WAAxB,C,CAEP;;;;AACA,SAASC,UAAT,GAAsB;AAClB,MAAI,iBAA0B,MAA1B,IAAoC,cAAoB,SAA5D,EAAuE;AACnE,WAAO,kCAAP;AACH;;AAED,mBAAUC,SAAV;AACH;;AAEM,IAAMC,OAAO,GAAGF,UAAU,EAA1B,C,CAEP;;;AACO,IAAMG,iBAAiB,GAC1BD,OAAO,GAAG,4DADP;;AAEA,IAAME,kBAAkB,GAC3BF,OAAO,GAAG,8DADP;;AAEA,IAAMG,kBAAkB,GAC3BH,OAAO,GAAG,8DADP;;AAEA,IAAMI,kBAAkB,GAC3BJ,OAAO,GAAG,8DADP;;AAEA,IAAMK,kBAAkB,GAC3BL,OAAO,GAAG,8DADP;;AAEA,IAAMM,kBAAkB,GAC3BN,OAAO,GAAG,8DADP;;AAEA,IAAMO,kBAAkB,GAC3BP,OAAO,GAAG,8DADP;;AAEA,IAAMQ,mBAAmB,GAC5BR,OAAO,GAAG,gEADP;;AAGA,IAAMS,iBAAiB,GAC1BT,OAAO,GAAG,4DADP;;AAEA,IAAMU,kBAAkB,GAC3BV,OAAO,GAAG,8DADP;;AAEA,IAAMW,kBAAkB,GAC3BX,OAAO,GAAG,8DADP;;AAEA,IAAMY,kBAAkB,GAC3BZ,OAAO,GAAG,8DADP;;AAEA,IAAMa,mBAAmB,GAC5Bb,OAAO,GAAG,gEADP,C,CAGP;;;AACO,IAAMc,WAAW,GAAG,CAApB;;AACA,IAAMC,SAAS,GAAG,CAAlB;;AACA,IAAMC,SAAS,GAAG,CAAlB","sourcesContent":["// used to auto resizing etc.\nexport const AUTO = -1;\n\n// supported mime types\nexport const MIME_PNG = 'image/png';\nexport const MIME_TIFF = 'image/tiff';\nexport const MIME_JPEG = 'image/jpeg';\nexport const MIME_JGD = 'image/jgd';\nexport const MIME_BMP = 'image/bmp';\nexport const MIME_X_MS_BMP = 'image/x-ms-bmp';\nexport const MIME_GIF = 'image/gif';\n\n// PNG filter types\nexport const PNG_FILTER_AUTO = -1;\nexport const PNG_FILTER_NONE = 0;\nexport const PNG_FILTER_SUB = 1;\nexport const PNG_FILTER_UP = 2;\nexport const PNG_FILTER_AVERAGE = 3;\nexport const PNG_FILTER_PATH = 4;\n\nexport const RESIZE_NEAREST_NEIGHBOR = 'nearestNeighbor';\nexport const RESIZE_BILINEAR = 'bilinearInterpolation';\nexport const RESIZE_BICUBIC = 'bicubicInterpolation';\nexport const RESIZE_HERMITE = 'hermiteInterpolation';\nexport const RESIZE_BEZIER = 'bezierInterpolation';\n\n// Align modes for cover, contain, bit masks\nexport const HORIZONTAL_ALIGN_LEFT = 1;\nexport const HORIZONTAL_ALIGN_CENTER = 2;\nexport const HORIZONTAL_ALIGN_RIGHT = 4;\n\nexport const VERTICAL_ALIGN_TOP = 8;\nexport const VERTICAL_ALIGN_MIDDLE = 16;\nexport const VERTICAL_ALIGN_BOTTOM = 32;\n\n// blend modes\nexport const BLEND_SOURCE_OVER = 'srcOver';\nexport const BLEND_DESTINATION_OVER = 'dstOver';\nexport const BLEND_MULTIPLY = 'multiply';\nexport const BLEND_SCREEN = 'screen';\nexport const BLEND_OVERLAY = 'overlay';\nexport const BLEND_DARKEN = 'darken';\nexport const BLEND_LIGHTEN = 'lighten';\nexport const BLEND_HARDLIGHT = 'hardLight';\nexport const BLEND_DIFFERENCE = 'difference';\nexport const BLEND_EXCLUSION = 'exclusion';\n\n// Discover Jimp directory in any environment. (also in fucking karma)\nfunction getJimpDir() {\n    if (process.env.BABEL_ENV === 'test' && process.env.ENV === 'browser') {\n        return 'http://localhost:9876/base/test/';\n    }\n\n    return `${__dirname}/`;\n}\n\nexport const dirName = getJimpDir();\n\n// Font locations\nexport const FONT_SANS_8_BLACK =\n    dirName + '../fonts/open-sans/open-sans-8-black/open-sans-8-black.fnt';\nexport const FONT_SANS_10_BLACK =\n    dirName + '../fonts/open-sans/open-sans-10-black/open-sans-10-black.fnt';\nexport const FONT_SANS_12_BLACK =\n    dirName + '../fonts/open-sans/open-sans-12-black/open-sans-12-black.fnt';\nexport const FONT_SANS_14_BLACK =\n    dirName + '../fonts/open-sans/open-sans-14-black/open-sans-14-black.fnt';\nexport const FONT_SANS_16_BLACK =\n    dirName + '../fonts/open-sans/open-sans-16-black/open-sans-16-black.fnt';\nexport const FONT_SANS_32_BLACK =\n    dirName + '../fonts/open-sans/open-sans-32-black/open-sans-32-black.fnt';\nexport const FONT_SANS_64_BLACK =\n    dirName + '../fonts/open-sans/open-sans-64-black/open-sans-64-black.fnt';\nexport const FONT_SANS_128_BLACK =\n    dirName + '../fonts/open-sans/open-sans-128-black/open-sans-128-black.fnt';\n\nexport const FONT_SANS_8_WHITE =\n    dirName + '../fonts/open-sans/open-sans-8-white/open-sans-8-white.fnt';\nexport const FONT_SANS_16_WHITE =\n    dirName + '../fonts/open-sans/open-sans-16-white/open-sans-16-white.fnt';\nexport const FONT_SANS_32_WHITE =\n    dirName + '../fonts/open-sans/open-sans-32-white/open-sans-32-white.fnt';\nexport const FONT_SANS_64_WHITE =\n    dirName + '../fonts/open-sans/open-sans-64-white/open-sans-64-white.fnt';\nexport const FONT_SANS_128_WHITE =\n    dirName + '../fonts/open-sans/open-sans-128-white/open-sans-128-white.fnt';\n\n// Edge Handling\nexport const EDGE_EXTEND = 1;\nexport const EDGE_WRAP = 2;\nexport const EDGE_CROP = 3;\n"],"file":"constants.js"}