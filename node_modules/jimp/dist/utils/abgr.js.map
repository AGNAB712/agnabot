{"version":3,"sources":["../../src/utils/abgr.js"],"names":["toAGBR","image","bitmap","width","height","x","y","index","red","data","green","blue","alpha","fromAGBR","is_with_alpha"],"mappings":";;;;;;;;;;AAAA;;;;AAEO,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AAC1B,SAAO,mBAAKA,KAAL,EAAY,CAAZ,EAAe,CAAf,EAAkBA,KAAK,CAACC,MAAN,CAAaC,KAA/B,EAAsCF,KAAK,CAACC,MAAN,CAAaE,MAAnD,EAA2D,UAC9DC,CAD8D,EAE9DC,CAF8D,EAG9DC,KAH8D,EAIhE;AACE,QAAMC,GAAG,GAAG,KAAKN,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,CAAZ;AACA,QAAMG,KAAK,GAAG,KAAKR,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,CAAd;AACA,QAAMI,IAAI,GAAG,KAAKT,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,CAAb;AACA,QAAMK,KAAK,GAAG,KAAKV,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,CAAd;AAEA,SAAKL,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,IAA8BK,KAA9B;AACA,SAAKV,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,IAA8BI,IAA9B;AACA,SAAKT,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,IAA8BG,KAA9B;AACA,SAAKR,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,IAA8BC,GAA9B;AACH,GAdM,CAAP;AAeH;;AAEM,SAASK,QAAT,CAAkBZ,KAAlB,EAAyB;AAC5B,SAAO,mBAAKA,KAAL,EAAY,CAAZ,EAAe,CAAf,EAAkBA,KAAK,CAACC,MAAN,CAAaC,KAA/B,EAAsCF,KAAK,CAACC,MAAN,CAAaE,MAAnD,EAA2D,UAC9DC,CAD8D,EAE9DC,CAF8D,EAG9DC,KAH8D,EAIhE;AACE,QAAMK,KAAK,GAAG,KAAKV,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,CAAd;AACA,QAAMI,IAAI,GAAG,KAAKT,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,CAAb;AACA,QAAMG,KAAK,GAAG,KAAKR,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,CAAd;AACA,QAAMC,GAAG,GAAG,KAAKN,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,CAAZ;AAEA,SAAKL,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,IAA8BC,GAA9B;AACA,SAAKN,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,IAA8BG,KAA9B;AACA,SAAKR,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,IAA8BI,IAA9B;AACA,SAAKT,MAAL,CAAYO,IAAZ,CAAiBF,KAAK,GAAG,CAAzB,IAA8BN,KAAK,CAACC,MAAN,CAAaY,aAAb,GAA6BF,KAA7B,GAAqC,IAAnE;AACH,GAdM,CAAP;AAeH","sourcesContent":["import scan from './scan';\n\nexport function toAGBR(image) {\n    return scan(image, 0, 0, image.bitmap.width, image.bitmap.height, function(\n        x,\n        y,\n        index\n    ) {\n        const red = this.bitmap.data[index + 0];\n        const green = this.bitmap.data[index + 1];\n        const blue = this.bitmap.data[index + 2];\n        const alpha = this.bitmap.data[index + 3];\n\n        this.bitmap.data[index + 0] = alpha;\n        this.bitmap.data[index + 1] = blue;\n        this.bitmap.data[index + 2] = green;\n        this.bitmap.data[index + 3] = red;\n    });\n}\n\nexport function fromAGBR(image) {\n    return scan(image, 0, 0, image.bitmap.width, image.bitmap.height, function(\n        x,\n        y,\n        index\n    ) {\n        const alpha = this.bitmap.data[index + 0];\n        const blue = this.bitmap.data[index + 1];\n        const green = this.bitmap.data[index + 2];\n        const red = this.bitmap.data[index + 3];\n\n        this.bitmap.data[index + 0] = red;\n        this.bitmap.data[index + 1] = green;\n        this.bitmap.data[index + 2] = blue;\n        this.bitmap.data[index + 3] = image.bitmap.is_with_alpha ? alpha : 0xff;\n    });\n}\n"],"file":"abgr.js"}